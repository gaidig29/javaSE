package fr.eni.papeterie.ihm;




import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
public class EcranArticle extends JFrame{
    private JTextField txtReference, txtDesignation, txtMarque, txtStock, txtPrix;
    private JRadioButton radioRamette, radioStylo;
    private JPanel panelType, panelGrammage;
    private JCheckBox chk80, chk100;
    private JComboBox<String> cboCouleur;
    private JLabel lblReference, lblDesignation, lblMarque, lblStock, lblPrix, lblType, lblGrammage, lblCouleur;
    private JPanel panelBoutons;
    private JButton btnPrecedent, btnNouveau, btnEnregistrer, btnSupprimer, btnSuivant;
    public EcranArticle() throws HeadlessException {
        super();
        this.setTitle("Article");
        this.setSize(new Dimension(500,500));
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        initIHM();
    }
    private void initIHM() {
        JPanel panel = new JPanel();
        panel.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
    	gbc.gridy=0;
		gbc.gridx=0;
		panel.add(getLblReference(),gbc);
		
		gbc.gridx=1;
		panel.add(getTxtReference(),gbc);
		
		gbc.gridy=1;
		gbc.gridx=0;
		panel.add(getLblDesignation(),gbc);
		
		gbc.gridx=1;
		panel.add(getTxtDesignation(),gbc);
        gbc.gridy=0;
        gbc.gridx=0;
        //panel.add(getBtnNouveau(),gbc);
        panel.add(getRadioRamette(),gbc);
        //gbc.gridx=1;
        //panel.add(getBtnSuivant(),gbc);
        gbc.gridy=1;
        gbc.gridx=0;
        gbc.gridwidth=2;
        panel.add(getPanelBoutons(),gbc);
        this.setContentPane(panel);
    }
    public JButton getBtnPrecedent() {
        if (btnPrecedent == null) {
            btnPrecedent = new JButton();
            ImageIcon image = new ImageIcon(this.getClass().getResource("resources/Back24.gif"));
            btnPrecedent.setIcon(image);
        }
        return btnPrecedent;
    }
    public JButton getBtnNouveau() {
        if (btnNouveau == null) {
            btnNouveau = new JButton();
            ImageIcon image = new ImageIcon(this.getClass().getResource("resources/New24.gif"));
            btnNouveau.setIcon(image);
        }
        return btnNouveau;
    }
    public JButton getBtnEnregistrer() {
        if (btnEnregistrer == null) {
            btnEnregistrer = new JButton();
            ImageIcon image = new ImageIcon(this.getClass().getResource("resources/Save24.gif"));
            btnEnregistrer.setIcon(image);
        }
        return btnEnregistrer;
    }
    public JButton getBtnSupprimer() {
        if (btnSupprimer == null) {
            btnSupprimer = new JButton();
            ImageIcon image = new ImageIcon(this.getClass().getResource("resources/Delete24.gif"));
            btnSupprimer.setIcon(image);
        }
        return btnSupprimer;
    }
    public JButton getBtnSuivant() {
        if (btnSuivant == null) {
            btnSuivant = new JButton();
            ImageIcon image = new ImageIcon(this.getClass().getResource("resources/Forward24.gif"));
            btnSuivant.setIcon(image);
        }
        return btnSuivant;
    }
    public JTextField getTxtReference() {
        if (txtReference == null) {
            txtReference = new JTextField(30);
        }
        return txtReference;
    }
    public JTextField getTxtDesignation() {
        if (txtDesignation == null) {
            txtDesignation = new JTextField(30);
        }
        return txtDesignation;
    }
    public JTextField getTxtMarque() {
        if (txtMarque == null) {
            txtMarque = new JTextField(30);
        }
        return txtMarque;
    }
    public JTextField getTxtStock() {
        if (txtStock == null) {
            txtStock = new JTextField(30);
        }
        return txtStock;
    }
    public JTextField getTxtPrix() {
        if (txtPrix == null) {
            txtPrix = new JTextField(30);
        }
        return txtPrix;
    }
    public JRadioButton getRadioRamette() {
        if (radioRamette == null) {
            radioRamette = new JRadioButton();
        }
        return radioRamette;
    }
    public JRadioButton getRadioStylo() {
        if (radioStylo == null) {
            radioStylo = new JRadioButton();
        }
        return radioStylo;
    }
    public JPanel getPanelType() {
        if (panelType == null) {
            panelType = new JPanel();
        }
        return panelType;
    }
    public JPanel getPanelGrammage() {
        if (panelGrammage == null) {
            panelGrammage = new JPanel();
        }
        return panelGrammage;
    }
    public JCheckBox getChk80() {
        if (chk80 == null) {
            chk80 = new JCheckBox();
        }
        return chk80;
    }
    public JCheckBox getChk100() {
        if (chk100 == null) {
            chk100 = new JCheckBox();
        }
        return chk100;
    }
    public JComboBox<String> getCboCouleur() {
        if (cboCouleur == null) {
            cboCouleur = new JComboBox<String>();
        }
        return cboCouleur;
    }
    public JPanel getPanelBoutons() {
        if (panelBoutons == null) {
            panelBoutons = new JPanel();
            panelBoutons.add(getBtnPrecedent());
            panelBoutons.add(getBtnNouveau());
            panelBoutons.add(getBtnEnregistrer());
            panelBoutons.add(getBtnSupprimer());
            panelBoutons.add(getBtnSuivant());
        }
        return panelBoutons;
    }
    public JLabel getLblReference() {
        if (lblReference == null) {
            lblReference = new JLabel("Référence : ");
        }
        return lblReference;
    }
    public JLabel getLblDesignation() {
        if (lblDesignation == null) {
            lblDesignation = new JLabel("Désignation : ");
        }
        return lblDesignation;
    }
    public JLabel getLblMarque() {
        if (lblMarque == null) {
            lblMarque = new JLabel("Marque : ");
        }
        return lblMarque;
    }
    public JLabel getLblStock() {
        if (lblStock == null) {
            lblStock = new JLabel("Stock : ");
        }
        return lblStock;
    }
    public JLabel getLblPrix() {
        if (lblPrix == null) {
            lblPrix = new JLabel("Prix : ");
        }
        return lblPrix;
    }
    public JLabel getLblType() {
        if (lblType == null) {
            lblType = new JLabel("Type : ");
        }
        return lblType;
    }
    public JLabel getLblGrammage() {
        if (lblGrammage == null) {
            lblGrammage = new JLabel("Grammage : ");
        }
        return lblGrammage;
    }
    public JLabel getLblCouleur() {
        if (lblCouleur == null) {
            lblCouleur = new JLabel("Couleur : ");
        }
        return lblCouleur;
    }
}
/*
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.HeadlessException;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;

public class EcranArticle extends JFrame {

	private JTextField txtReference,txtDesignation,txtMarque,txtStock;
	private JRadioButton radioRamette, radioStyle;
	private JPanel panelType, panelGrammage ;
	private JCheckBox chk80,chk100;
	private JComboBox<String>cboCouleur;
	private JLabel lblReference,lbldesignation,lblMarque,lblStock,lblPrix;

	private JPanel panelBoutons;
	private JButton btnPrecedent;
	private JButton btnNouveau;
	private JButton btnEnregistrer;
	private JButton btnSupprimer;
	private JButton btnSuivant;
	
	
	public EcranArticle() throws HeadlessException {
		super();

		this.setTitle("Stagiaire");
		this.setSize(new Dimension(500,500));
		this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		initIHM();
	}
	
	private void initIHM() {
		JPanel panel = new JPanel();
		panel.setLayout(new GridBagLayout());
		GridBagConstraints gbc = new GridBagConstraints();
		
		gbc.gridy=0;
		gbc.gridx=0;
		panel.add(getLblReference(),gbc);
		
		gbc.gridx=1;
		panel.add(getTxtReference(),gbc);
		
		gbc.gridy=1;
		gbc.gridx=0;
		panel.add(getLbldesignation(),gbc);
		
		gbc.gridx=1;
		panel.add(getTxtDesignation(),gbc);
		
		gbc.gridy=1;
		gbc.gridx=0;
		gbc.gridwidth=2;
		panel.add(getPanBoutons(),gbc);
		
		this.setContentPane(panel);
	}
	
	
	
	
	public JLabel getLblReference() {
		
		if (lblReference == null) {
			lblReference = new JLabel("Référence : ");
		}
		return lblReference;
	}

	public void setLblReference(JLabel lblReference) {
		this.lblReference = lblReference;
	}

	public JLabel getLbldesignation() {
		if (lbldesignation == null) {
			lbldesignation = new JLabel("Designation : ");
		}
		return lbldesignation;
	}

	public void setLbldesignation(JLabel lbldesignation) {
		this.lbldesignation = lbldesignation;
	}

	public JLabel getLblMarque() {
		if (lblMarque == null) {
			lblMarque = new JLabel("Marque : ");
		}
		return lblMarque;
	}

	public void setLblMarque(JLabel lblMarque) {
		this.lblMarque = lblMarque;
	}

	public JLabel getLblStock() {
		if (lblStock == null) {
			lblStock = new JLabel("Stock : ");
		}
		return lblStock;
	}

	public void setLblStock(JLabel lblStock) {
		this.lblStock = lblStock;
	}

	public JLabel getLblPrix() {
		if (lblPrix == null) {
			lblPrix = new JLabel("Prix : ");
		}
		return lblPrix;
	}

	public void setLblPrix(JLabel lblPrix) {
		this.lblPrix = lblPrix;
	}

	public JTextField getTxtReference() {
		if (txtReference == null) {
			txtReference = new JTextField(30);
		}
		return txtReference;
	}

	public void setTxtReference(JTextField txtReference) {
		this.txtReference = txtReference;
	}

	public JTextField getTxtDesignation() {
		if (txtDesignation == null) {
			txtDesignation = new JTextField(30);
		}
		return txtDesignation;
	}

	public void setTxtDesignation(JTextField txtDesignation) {
		this.txtDesignation = txtDesignation;
	}

	public JTextField getTxtMarque() {
		if (txtMarque == null) {
			txtMarque = new JTextField(30);
		}
		return txtMarque;
	}

	public void setTxtMarque(JTextField txtMarque) {
		this.txtMarque = txtMarque;
	}

	public JTextField getTxtStock() {
		if (txtStock == null) {
			txtStock = new JTextField(30);
		}
		return txtStock;
	}

	public void setTxtStock(JTextField txtStock) {
		this.txtStock = txtStock;
	}

	public JRadioButton getRadioRamette() {
		
		return radioRamette;
	}

	public void setRadioRamette(JRadioButton radioRamette) {
		this.radioRamette = radioRamette;
	}

	public JRadioButton getRadioStyle() {
		return radioStyle;
	}

	public void setRadioStyle(JRadioButton radioStyle) {
		this.radioStyle = radioStyle;
	}

	public JPanel getPanelType() {
		return panelType;
	}

	public void setPanelType(JPanel panelType) {
		this.panelType = panelType;
	}

	public JPanel getPanelGrammage() {
		return panelGrammage;
	}

	public void setPanelGrammage(JPanel panelGrammage) {
		this.panelGrammage = panelGrammage;
	}

	public JCheckBox getChk80() {
		return chk80;
	}

	public void setChk80(JCheckBox chk80) {
		this.chk80 = chk80;
	}

	public JCheckBox getChk100() {
		return chk100;
	}

	public void setChk100(JCheckBox chk100) {
		this.chk100 = chk100;
	}

	public JComboBox<String> getCboCouleur() {
		return cboCouleur;
	}

	public void setCboCouleur(JComboBox<String> cboCouleur) {
		this.cboCouleur = cboCouleur;
	}

	public JPanel getPanelBoutons() {
		if(btnPrecedent == null) {
			btnPrecedent = new JButton();
			ImageIcon image = new ImageIcon(this.getClass()
					.getResource("resources/Back24.gif"));
			btnPrecedent.setIcon(image);
		}
		return panelBoutons;
	}

	public void setPanelBoutons(JPanel panelBoutons) {
		this.panelBoutons = panelBoutons;
	}

	public JButton getBtnPrecedent() {
		if(btnPrecedent == null) {
			btnPrecedent = new JButton();
			ImageIcon image = new ImageIcon(this.getClass()
					.getResource("resources/Back24.gif"));
			btnPrecedent.setIcon(image);
		}
		return btnPrecedent;
	}

	public void setBtnPrecedent(JButton btnPrecedent) {
		this.btnPrecedent = btnPrecedent;
	}

	public JButton getBtnNouveau() {
		if(btnNouveau == null) {
			btnNouveau = new JButton();
			ImageIcon image = new ImageIcon(this.getClass()
					.getResource("resources/New24.gif"));
			btnNouveau.setIcon(image);
		}
		return btnNouveau;
	}

	public void setBtnNouveau(JButton btnNouveau) {
		this.btnNouveau = btnNouveau;
	}

	public JButton getBtnEnregistrer() {
		if(btnEnregistrer == null) {
			btnEnregistrer = new JButton();
			ImageIcon image = new ImageIcon(this.getClass()
					.getResource("resources/Save24.gif"));
			btnEnregistrer.setIcon(image);
		}
		return btnEnregistrer;
	}

	public void setBtnEnregistrer(JButton btnEnregistrer) {
		this.btnEnregistrer = btnEnregistrer;
	}

	public JButton getBtnSupprimer() {
		if(btnSupprimer == null) {
			btnSupprimer = new JButton();
			ImageIcon image = new ImageIcon(this.getClass()
					.getResource("resources/Delete24.gif"));
			btnSupprimer.setIcon(image);
		}
		return btnSupprimer;
	}

	public void setBtnSupprimer(JButton btnSupprimer) {
		this.btnSupprimer = btnSupprimer;
	}

	public JButton getBtnSuivant() {
		if(btnSuivant == null) {
			btnSuivant = new JButton();
			ImageIcon image = new ImageIcon(this.getClass()
					.getResource("resources/Forward24.gif"));
			btnSuivant.setIcon(image);
		}
		return btnSuivant;
	}
	
	public void setBtnSuivant(JButton btnSuivant) {
		this.btnSuivant = btnSuivant;
	}
	
	public JPanel getPanBoutons() {
		if (panBoutons == null) {
			panBoutons = new JPanel();
			panBoutons.add(getBtnAjouter());
			panBoutons.add(getBtnAnnuler());

		}
		return panBoutons;
	}

	public void setPanBoutons(JPanel panBoutons) {
		this.panBoutons = panBoutons;
	}
	
	

	
}
*/