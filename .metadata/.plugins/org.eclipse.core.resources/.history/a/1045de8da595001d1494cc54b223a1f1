package fr.eni.random.ihm;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.List;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.WindowConstants;

import fr.eni.random.bll.PersonneManager;
import fr.eni.random.bo.Personne;


public class MaFenetre extends JFrame {
	//implements ActionListener
	
	PersonneManager pmger = new PersonneManager();
	
	JLabel jl1 = new JLabel("Nom : ");
	JTextField jt1 = new JTextField(20);	
	JButton jb1 = new JButton("Ajouter");
	JButton jb2 = new JButton("Supprimer");
	JList list1;
	List list2 = new List();
	java.util.List<Personne> listP = new ArrayList<>();
	
	MaFenetre(){
		listP = pmger.recupToutLeMonde();
		
		this.setVisible(true);
		this.setBounds(10, 10, 1000, 1000);
		this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		this.setLayout(new BorderLayout());

		JPanel jp1 = new JPanel();
		this.add(jp1, BorderLayout.NORTH);
		JPanel jp2 = new JPanel();
		this.add(jp2, BorderLayout.CENTER);

		jp1.setLayout(new FlowLayout());
		jp1.add(jl1);
		jp1.add(jt1);
		jp1.add(jb1);
		jp1.add(jb2);

		jp2.setLayout(new GridLayout());
		jp2.add(list1);
		jp2.add(list2);

		
		//jb1.addActionListener((ActionListener)this);
		//jb2.addActionListener((ActionListener)this);

		jb1.addActionListener(new ActionListener() {
			
			public void actionPerformed(ActionEvent e) {
				String s = jt1.getText();
				Personne personneAEnregistrer = new Personne();
				personneAEnregistrer.setNom(s);
				pmger.enregistrerUnePersonne(personneAEnregistrer);
				list1.add(s);
				jt1.setText("");
				jt1.requestFocus();
			}
		
		});
		jb2.addActionListener(new  ActionListener() {
			
			public void actionPerformed(ActionEvent e) {
				int num = list1.getSelectedIndex();
				if(num != -1) {
					Personne personneASupprimer = new Personne();
					personneASupprimer.setNom(num);
					pmger.supprimerUnePersonneEnBase(personneASupprimer);
					list1.remove(num);
				}
			}
		
		});
	}
	
	/*public void actionPerformed (ActionEvent e) {
		if (e.getSource() == jb1) {
			String s = jt1.getText();
			list1.add(s);
			jt1.setText("");
		}else if (e.getSource() == jb2) {
			int num = list1.getSelectedIndex();
			if(num!= -1) {
				list1.remove(num);
			}
		}
	}*/

	public static void main(String[] args) {

		new MaFenetre();
		
	}

}
